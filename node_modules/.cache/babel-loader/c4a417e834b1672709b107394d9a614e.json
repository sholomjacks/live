{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gamem\\\\codecademy\\\\src\\\\SignIn.js\";\nimport React from 'react';\nimport { compose, lt, length, filter, propEq } from 'ramda';\nimport './style.css';\nimport './submit_button.css';\nimport './form.css';\n\nvar bcrypt = require('bcryptjs');\n\nvar hash;\n\nconst {\n  redibase\n} = require('./connect');\n\nconst valid_users = [{\n  username: 'sholom',\n  password: 'jacks'\n}, {\n  username: 'mendel',\n  password: 'hacks'\n}];\nexport class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      router: false\n    };\n\n    this.login = (username, password) => {\n      if (length(username) === 0 || length(password) === 0) return;\n      console.log(\"hi\");\n\n      if (this.is_valid(username, password)) {\n        this.setState({\n          router: true\n        });\n        hash = bcrypt.hashSync(\"bcrypt-connection-secured\");\n        window.location = '/top';\n      } else {\n        alert(\"The login is incorrect, you may not enter the land of padah\");\n      }\n    };\n\n    this.is_valid = (username, password) => compose(lt(0), length, filter(propEq('password', password)), filter(propEq('username', username)))(valid_users);\n  }\n\n  render() {\n    localStorage.setItem(\"hash\", hash);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      onChange: e => {\n        this.setState({\n          username: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Username\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      type: \"password\",\n      required: true,\n      onChange: e => {\n        this.setState({\n          password: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Password\")), React.createElement(\"button\", {\n      onClick: () => this.login(this.state.username, this.state.password),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/gamem/codecademy/src/SignIn.js"],"names":["React","compose","lt","length","filter","propEq","bcrypt","require","hash","redibase","valid_users","username","password","App","Component","state","router","login","console","log","is_valid","setState","hashSync","window","location","alert","render","localStorage","setItem","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { compose, lt, length, filter, propEq } from 'ramda'\nimport './style.css'\nimport './submit_button.css'\nimport './form.css'\nvar bcrypt = require('bcryptjs');\nvar hash\nconst { redibase } = require('./connect')\nconst valid_users = [\n    {\n        username: 'sholom',\n        password: 'jacks'\n    },\n    {\n        username: 'mendel',\n        password: 'hacks'\n    }\n]\n\nexport class App extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        router: false\n    }\n    \n    login = (username, password) => {\n        if (length(username) === 0 || length(password) === 0) return\n        console.log(\"hi\")\n        if (this.is_valid(username, password)) {\n            this.setState({ router: true })\n            hash = bcrypt.hashSync(\"bcrypt-connection-secured\");\n            window.location = '/top'\n        } else {\n            alert(\"The login is incorrect, you may not enter the land of padah\")\n        }\n    }\n\n    is_valid = (username, password) => compose(\n        lt(0),\n        length,\n        filter(propEq('password', password)),\n        filter(propEq('username', username))\n    )(valid_users)\n\n    render() {\n\n        localStorage.setItem(\"hash\", hash)\n        \n        return (\n            <div>\n                <center>\n                    <section className=\"overlay\">\n                        <h1 id=\"first\">Sign In</h1>\n                        <label>\n                            <input type=\"text\" required onChange={(e) => { this.setState({ username: e.target.value }) }} />\n                            <div class=\"label-text\">Username</div>\n                        </label>\n                        <label>\n                            <input type=\"text\" type=\"password\" required onChange={(e) => { this.setState({ password: e.target.value }) }} />\n                            <div class=\"label-text\">Password</div>\n                        </label>\n                        <button onClick={() => this.login(this.state.username, this.state.password)}>Submit</button>\n                        {/* <a href=\"#\" class=\"animated-button1\" onClick={go}>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              Submit\n                </a> */}\n                        {/* <h2>If you want to sign up you cant. haha.</h2> */}\n\n\n\n                    </section>\n                </center>\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}