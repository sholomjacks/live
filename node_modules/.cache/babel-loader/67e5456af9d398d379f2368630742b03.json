{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\gamem\\\\codecademy\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\gamem\\\\codecademy\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\gamem\\\\codecademy\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\gamem\\\\codecademy\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\gamem\\\\codecademy\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar net_1 = require(\"net\");\n\nvar tls_1 = require(\"tls\");\n\nvar utils_1 = require(\"../utils\");\n\nvar AbstractConnector_1 = require(\"./AbstractConnector\");\n\nfunction isIIpcConnectionOptions(value) {\n  return value.path;\n}\n\nexports.isIIpcConnectionOptions = isIIpcConnectionOptions;\n\nvar StandaloneConnector =\n/*#__PURE__*/\nfunction (_AbstractConnector_1$) {\n  _inherits(StandaloneConnector, _AbstractConnector_1$);\n\n  function StandaloneConnector(options) {\n    var _this;\n\n    _classCallCheck(this, StandaloneConnector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StandaloneConnector).call(this));\n    _this.options = options;\n    return _this;\n  }\n\n  _createClass(StandaloneConnector, [{\n    key: \"connect\",\n    value: function connect(_) {\n      var _this2 = this;\n\n      var options = this.options;\n      this.connecting = true;\n      var connectionOptions;\n\n      if (isIIpcConnectionOptions(options)) {\n        connectionOptions = {\n          path: options.path\n        };\n      } else {\n        connectionOptions = {};\n\n        if (options.port != null) {\n          connectionOptions.port = options.port;\n        }\n\n        if (options.host != null) {\n          connectionOptions.host = options.host;\n        }\n\n        if (options.family != null) {\n          connectionOptions.family = options.family;\n        }\n      }\n\n      if (options.tls) {\n        Object.assign(connectionOptions, options.tls);\n      } // TODO:\n      // We use native Promise here since other Promise\n      // implementation may use different schedulers that\n      // cause issue when the stream is resolved in the\n      // next tick.\n      // Should use the provided promise in the next major\n      // version and do not connect before resolved.\n\n\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (!_this2.connecting) {\n            reject(new Error(utils_1.CONNECTION_CLOSED_ERROR_MSG));\n            return;\n          }\n\n          try {\n            if (options.tls) {\n              _this2.stream = tls_1.connect(connectionOptions);\n            } else {\n              _this2.stream = net_1.createConnection(connectionOptions);\n            }\n          } catch (err) {\n            reject(err);\n            return;\n          }\n\n          resolve(_this2.stream);\n        });\n      });\n    }\n  }]);\n\n  return StandaloneConnector;\n}(AbstractConnector_1.default);\n\nexports.default = StandaloneConnector;","map":{"version":3,"sources":["C:/Users/gamem/codecademy/node_modules/ioredis/built/connectors/StandaloneConnector.js"],"names":["Object","defineProperty","exports","value","net_1","require","tls_1","utils_1","AbstractConnector_1","isIIpcConnectionOptions","path","StandaloneConnector","options","_","connecting","connectionOptions","port","host","family","tls","assign","Promise","resolve","reject","process","nextTick","Error","CONNECTION_CLOSED_ERROR_MSG","stream","connect","createConnection","err","default"],"mappings":"AAAA;;;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,KAAD,CAArB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,KAAD,CAArB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAMG,mBAAmB,GAAGH,OAAO,CAAC,qBAAD,CAAnC;;AACA,SAASI,uBAAT,CAAiCN,KAAjC,EAAwC;AACpC,SAAOA,KAAK,CAACO,IAAb;AACH;;AACDR,OAAO,CAACO,uBAAR,GAAkCA,uBAAlC;;IACME,mB;;;;;AACF,+BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB;AACA,UAAKA,OAAL,GAAeA,OAAf;AAFiB;AAGpB;;;;4BACOC,C,EAAG;AAAA;;AAAA,UACCD,OADD,GACa,IADb,CACCA,OADD;AAEP,WAAKE,UAAL,GAAkB,IAAlB;AACA,UAAIC,iBAAJ;;AACA,UAAIN,uBAAuB,CAACG,OAAD,CAA3B,EAAsC;AAClCG,QAAAA,iBAAiB,GAAG;AAChBL,UAAAA,IAAI,EAAEE,OAAO,CAACF;AADE,SAApB;AAGH,OAJD,MAKK;AACDK,QAAAA,iBAAiB,GAAG,EAApB;;AACA,YAAIH,OAAO,CAACI,IAAR,IAAgB,IAApB,EAA0B;AACtBD,UAAAA,iBAAiB,CAACC,IAAlB,GAAyBJ,OAAO,CAACI,IAAjC;AACH;;AACD,YAAIJ,OAAO,CAACK,IAAR,IAAgB,IAApB,EAA0B;AACtBF,UAAAA,iBAAiB,CAACE,IAAlB,GAAyBL,OAAO,CAACK,IAAjC;AACH;;AACD,YAAIL,OAAO,CAACM,MAAR,IAAkB,IAAtB,EAA4B;AACxBH,UAAAA,iBAAiB,CAACG,MAAlB,GAA2BN,OAAO,CAACM,MAAnC;AACH;AACJ;;AACD,UAAIN,OAAO,CAACO,GAAZ,EAAiB;AACbnB,QAAAA,MAAM,CAACoB,MAAP,CAAcL,iBAAd,EAAiCH,OAAO,CAACO,GAAzC;AACH,OAvBM,CAwBP;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,aAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCC,QAAAA,OAAO,CAACC,QAAR,CAAiB,YAAM;AACnB,cAAI,CAAC,MAAI,CAACX,UAAV,EAAsB;AAClBS,YAAAA,MAAM,CAAC,IAAIG,KAAJ,CAAUnB,OAAO,CAACoB,2BAAlB,CAAD,CAAN;AACA;AACH;;AACD,cAAI;AACA,gBAAIf,OAAO,CAACO,GAAZ,EAAiB;AACb,cAAA,MAAI,CAACS,MAAL,GAActB,KAAK,CAACuB,OAAN,CAAcd,iBAAd,CAAd;AACH,aAFD,MAGK;AACD,cAAA,MAAI,CAACa,MAAL,GAAcxB,KAAK,CAAC0B,gBAAN,CAAuBf,iBAAvB,CAAd;AACH;AACJ,WAPD,CAQA,OAAOgB,GAAP,EAAY;AACRR,YAAAA,MAAM,CAACQ,GAAD,CAAN;AACA;AACH;;AACDT,UAAAA,OAAO,CAAC,MAAI,CAACM,MAAN,CAAP;AACH,SAlBD;AAmBH,OApBM,CAAP;AAqBH;;;;EAzD6BpB,mBAAmB,CAACwB,O;;AA2DtD9B,OAAO,CAAC8B,OAAR,GAAkBrB,mBAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst net_1 = require(\"net\");\nconst tls_1 = require(\"tls\");\nconst utils_1 = require(\"../utils\");\nconst AbstractConnector_1 = require(\"./AbstractConnector\");\nfunction isIIpcConnectionOptions(value) {\n    return value.path;\n}\nexports.isIIpcConnectionOptions = isIIpcConnectionOptions;\nclass StandaloneConnector extends AbstractConnector_1.default {\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    connect(_) {\n        const { options } = this;\n        this.connecting = true;\n        let connectionOptions;\n        if (isIIpcConnectionOptions(options)) {\n            connectionOptions = {\n                path: options.path\n            };\n        }\n        else {\n            connectionOptions = {};\n            if (options.port != null) {\n                connectionOptions.port = options.port;\n            }\n            if (options.host != null) {\n                connectionOptions.host = options.host;\n            }\n            if (options.family != null) {\n                connectionOptions.family = options.family;\n            }\n        }\n        if (options.tls) {\n            Object.assign(connectionOptions, options.tls);\n        }\n        // TODO:\n        // We use native Promise here since other Promise\n        // implementation may use different schedulers that\n        // cause issue when the stream is resolved in the\n        // next tick.\n        // Should use the provided promise in the next major\n        // version and do not connect before resolved.\n        return new Promise((resolve, reject) => {\n            process.nextTick(() => {\n                if (!this.connecting) {\n                    reject(new Error(utils_1.CONNECTION_CLOSED_ERROR_MSG));\n                    return;\n                }\n                try {\n                    if (options.tls) {\n                        this.stream = tls_1.connect(connectionOptions);\n                    }\n                    else {\n                        this.stream = net_1.createConnection(connectionOptions);\n                    }\n                }\n                catch (err) {\n                    reject(err);\n                    return;\n                }\n                resolve(this.stream);\n            });\n        });\n    }\n}\nexports.default = StandaloneConnector;\n"]},"metadata":{},"sourceType":"script"}