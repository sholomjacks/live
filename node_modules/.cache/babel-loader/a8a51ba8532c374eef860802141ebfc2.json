{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gamem\\\\codecademy\\\\src\\\\admin.js\";\nimport React from 'react';\nimport valid_users from './SignIn';\n\nvar bcrypt = require('bcryptjs');\n\nfunction go() {\n  let hash = localStorage.getItem(\"hash\");\n  let decide = bcrypt.compare(\"bcrypt-connection-secured\", hash);\n\n  if (decide === true) {\n    window.location = '/cmds';\n  }\n}\n\nconsole.log(valid_users);\n/*\r\n//redibase.delete(\"valid_users.username\")*/\n\nclass Admin extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cmd: '',\n      go: false,\n      track: false,\n      usernamet: ''\n    };\n\n    this.runcmd = e => {\n      if (e === 'Track') {\n        this.setState({\n          track: true\n        });\n      }\n    };\n\n    this.gousername = e => {\n      let hasht = localStorage.getItem(\"hash\");\n      let decide = bcrypt.compareSync(\"bcrypt-connection-secured\", hasht);\n\n      if (decide === true) {\n        window.location = '/admin/usernames';\n      } else {// do nothing\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    if (this.state.track === true) {\n      valid_users.unShift({\n        username: 'la',\n        password: 'la'\n      });\n      return React.createElement(React.Fragment, null, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.usernamet,\n        onChange: e => this.setState({\n          usernamet: e.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Username of the person you want to track\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.gousername(this.state.usernamet),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Usernames\"));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Admin Commands\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      value: this.state.cmd,\n      onChange: e => {\n        this.setState({\n          cmd: e.target.value\n        });\n        this.state.cmd.toUpperCase();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Command\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.runcmd(this.state.cmd),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Run\"), React.createElement(\"button\", {\n      onClick: go,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Commands\"));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["C:/Users/gamem/codecademy/src/admin.js"],"names":["React","valid_users","bcrypt","require","go","hash","localStorage","getItem","decide","compare","window","location","console","log","Admin","Component","state","cmd","track","usernamet","runcmd","e","setState","gousername","hasht","compareSync","componentDidMount","render","unShift","username","password","target","value","toUpperCase"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport valid_users from './SignIn'\r\nvar bcrypt = require('bcryptjs')\r\nfunction go() {\r\n\r\n    let hash = localStorage.getItem(\"hash\")\r\n\r\n    let decide = bcrypt.compare(\"bcrypt-connection-secured\", hash)\r\n\r\n    if (decide === true) {\r\n        window.location = '/cmds'\r\n    }\r\n}\r\nconsole.log(valid_users)\r\n/*\r\n//redibase.delete(\"valid_users.username\")*/\r\n\r\nclass Admin extends React.Component {\r\n    componentDidMount() {\r\n\r\n    }\r\n    state = {\r\n        cmd: '',\r\n        go: false,\r\n        track: false,\r\n        usernamet: ''\r\n    }\r\n    runcmd = (e) => {\r\n        if (e === 'Track') {\r\n            this.setState({ track: true })\r\n        }\r\n    }\r\n\r\n    gousername = (e) => {\r\n        let hasht = localStorage.getItem(\"hash\")\r\n        let decide = bcrypt.compareSync(\"bcrypt-connection-secured\", hasht)\r\n        if (decide === true) {\r\n            window.location = '/admin/usernames'\r\n        } else {\r\n            // do nothing\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.track === true) {\r\n            valid_users.unShift({\r\n                username: 'la',\r\n                password: 'la'\r\n            })\r\n            return (\r\n                <>\r\n                    <label>\r\n                        <input type=\"text\" required value={this.state.usernamet} onChange={(e) => this.setState({ usernamet: e.target.value })} />\r\n                        <div class=\"label-text\">Username of the person you want to track</div>\r\n                    </label>\r\n                    <br />\r\n                    <br />\r\n                    <button onClick={() => this.gousername(this.state.usernamet)}>Usernames</button>\r\n                </>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <title>Admin Commands</title>\r\n                <label>\r\n                    <input type=\"text\" required value={this.state.cmd} onChange={(e) => { this.setState({ cmd: e.target.value }); this.state.cmd.toUpperCase() }} />\r\n                    <div class=\"label-text\">Command</div>\r\n                </label>\r\n\r\n                <br />\r\n                <br />\r\n                <button type=\"submit\" onClick={() => this.runcmd(this.state.cmd)} >Run</button>\r\n                <button onClick={go}>Commands</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Admin"]},"metadata":{},"sourceType":"module"}