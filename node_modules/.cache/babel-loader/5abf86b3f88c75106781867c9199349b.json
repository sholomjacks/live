{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"./utils\");\n\nvar standard_as_callback_1 = require(\"standard-as-callback\");\n\nvar pipeline_1 = require(\"./pipeline\");\n\nfunction addTransactionSupport(redis) {\n  redis.pipeline = function (commands) {\n    var pipeline = new pipeline_1.default(this);\n\n    if (Array.isArray(commands)) {\n      pipeline.addBatch(commands);\n    }\n\n    return pipeline;\n  };\n\n  var multi = redis.multi;\n\n  redis.multi = function (commands, options) {\n    if (typeof options === \"undefined\" && !Array.isArray(commands)) {\n      options = commands;\n      commands = null;\n    }\n\n    if (options && options.pipeline === false) {\n      return multi.call(this);\n    }\n\n    var pipeline = new pipeline_1.default(this);\n    pipeline.multi();\n\n    if (Array.isArray(commands)) {\n      pipeline.addBatch(commands);\n    }\n\n    var exec = pipeline.exec;\n\n    pipeline.exec = function (callback) {\n      if (this._transactions > 0) {\n        exec.call(pipeline);\n      } // Returns directly when the pipeline\n      // has been called multiple times (retries).\n\n\n      if (this.nodeifiedPromise) {\n        return exec.call(pipeline);\n      }\n\n      var promise = exec.call(pipeline);\n      return standard_as_callback_1.default(promise.then(function (result) {\n        var execResult = result[result.length - 1];\n\n        if (typeof execResult === \"undefined\") {\n          throw new Error(\"Pipeline cannot be used to send any commands when the `exec()` has been called on it.\");\n        }\n\n        if (execResult[0]) {\n          execResult[0].previousErrors = [];\n\n          for (var i = 0; i < result.length - 1; ++i) {\n            if (result[i][0]) {\n              execResult[0].previousErrors.push(result[i][0]);\n            }\n          }\n\n          throw execResult[0];\n        }\n\n        return utils_1.wrapMultiResult(execResult[1]);\n      }), callback);\n    };\n\n    var execBuffer = pipeline.execBuffer;\n\n    pipeline.execBuffer = function (callback) {\n      if (this._transactions > 0) {\n        execBuffer.call(pipeline);\n      }\n\n      return pipeline.exec(callback);\n    };\n\n    return pipeline;\n  };\n\n  var exec = redis.exec;\n\n  redis.exec = function (callback) {\n    return standard_as_callback_1.default(exec.call(this).then(function (results) {\n      if (Array.isArray(results)) {\n        results = utils_1.wrapMultiResult(results);\n      }\n\n      return results;\n    }), callback);\n  };\n}\n\nexports.addTransactionSupport = addTransactionSupport;","map":{"version":3,"sources":["C:/Users/gamem/codecademy/node_modules/ioredis/built/transaction.js"],"names":["Object","defineProperty","exports","value","utils_1","require","standard_as_callback_1","pipeline_1","addTransactionSupport","redis","pipeline","commands","default","Array","isArray","addBatch","multi","options","call","exec","callback","_transactions","nodeifiedPromise","promise","then","result","execResult","length","Error","previousErrors","i","push","wrapMultiResult","execBuffer","results"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"./utils\");\nconst standard_as_callback_1 = require(\"standard-as-callback\");\nconst pipeline_1 = require(\"./pipeline\");\nfunction addTransactionSupport(redis) {\n    redis.pipeline = function (commands) {\n        const pipeline = new pipeline_1.default(this);\n        if (Array.isArray(commands)) {\n            pipeline.addBatch(commands);\n        }\n        return pipeline;\n    };\n    const { multi } = redis;\n    redis.multi = function (commands, options) {\n        if (typeof options === \"undefined\" && !Array.isArray(commands)) {\n            options = commands;\n            commands = null;\n        }\n        if (options && options.pipeline === false) {\n            return multi.call(this);\n        }\n        const pipeline = new pipeline_1.default(this);\n        pipeline.multi();\n        if (Array.isArray(commands)) {\n            pipeline.addBatch(commands);\n        }\n        const exec = pipeline.exec;\n        pipeline.exec = function (callback) {\n            if (this._transactions > 0) {\n                exec.call(pipeline);\n            }\n            // Returns directly when the pipeline\n            // has been called multiple times (retries).\n            if (this.nodeifiedPromise) {\n                return exec.call(pipeline);\n            }\n            const promise = exec.call(pipeline);\n            return standard_as_callback_1.default(promise.then(function (result) {\n                const execResult = result[result.length - 1];\n                if (typeof execResult === \"undefined\") {\n                    throw new Error(\"Pipeline cannot be used to send any commands when the `exec()` has been called on it.\");\n                }\n                if (execResult[0]) {\n                    execResult[0].previousErrors = [];\n                    for (let i = 0; i < result.length - 1; ++i) {\n                        if (result[i][0]) {\n                            execResult[0].previousErrors.push(result[i][0]);\n                        }\n                    }\n                    throw execResult[0];\n                }\n                return utils_1.wrapMultiResult(execResult[1]);\n            }), callback);\n        };\n        const { execBuffer } = pipeline;\n        pipeline.execBuffer = function (callback) {\n            if (this._transactions > 0) {\n                execBuffer.call(pipeline);\n            }\n            return pipeline.exec(callback);\n        };\n        return pipeline;\n    };\n    const { exec } = redis;\n    redis.exec = function (callback) {\n        return standard_as_callback_1.default(exec.call(this).then(function (results) {\n            if (Array.isArray(results)) {\n                results = utils_1.wrapMultiResult(results);\n            }\n            return results;\n        }), callback);\n    };\n}\nexports.addTransactionSupport = addTransactionSupport;\n"]},"metadata":{},"sourceType":"script"}