{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gamem\\\\codecademy\\\\src\\\\SignIn.js\";\nimport React from 'react';\nimport { compose, lt, length, filter, propEq } from 'ramda';\nimport './style.css';\nimport './submit_button.css';\nimport './form.css';\n\nconst {\n  redibase\n} = require('./connect');\n\nexport const message = 'hi';\nexport class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      router: false\n    };\n\n    this.login = (username, password) => {\n      if (length(username) !== 0 || length(password) !== 0) return;\n      const valid_users = [{\n        username: 'sholom',\n        password: 'jacks'\n      }, {\n        username: 'mendel',\n        password: 'hacks'\n      }];\n      console.log(\"hi\");\n\n      if (this.is_valid(username, password)) {\n        alert(`Welcome ${username}`);\n      } else {\n        alert(\"The login is incorrect, you may not enter the land of padah\");\n      }\n    };\n\n    this.is_valid = (username, password) => compose(lt(0), length, filter(propEq('password', password)), filter(propEq('username', username)))(this.valid_users);\n  }\n\n  render() {\n    // let router = redibase.get(\"router\")\n    // if (router === \"true\") {\n    //     return <Router>\n    //         <Route exact path=\"/\" component={App} />\n    //         <Route path=\"/users\" component={Users} />\n    //         <Route path=\"/contact\" component={Contact} />\n    //     </Router>\n    //     redibase.delete(\"router\")\n    // }\n    return React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      onChange: e => {\n        this.setState({\n          username: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Username\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      type: \"password\",\n      onChange: e => {\n        this.setState({\n          password: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Password\")), React.createElement(\"button\", {\n      onClick: () => this.login(this.state.username, this.state.password),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/gamem/codecademy/src/SignIn.js"],"names":["React","compose","lt","length","filter","propEq","redibase","require","message","App","Component","state","username","password","router","login","valid_users","console","log","is_valid","alert","render","e","setState","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { compose, lt, length, filter, propEq } from 'ramda'\nimport './style.css'\nimport './submit_button.css'\nimport './form.css'\nconst { redibase } = require('./connect')\nexport const message = 'hi'\n\nexport class App extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        router: false\n    }\n    login = (username, password) => {\n        if (length(username) !== 0 || length(password) !== 0) return\n        const valid_users = [\n            {\n                username: 'sholom',\n                password: 'jacks'\n            },\n            {\n                username: 'mendel',\n                password: 'hacks'\n            }\n        ]\n        console.log(\"hi\")\n        if (this.is_valid(username, password)) {\n            alert(`Welcome ${username}`)\n               \n        } else {\n            alert(\"The login is incorrect, you may not enter the land of padah\")\n        }\n    }\n\n    is_valid = (username, password) => compose(\n        lt(0),\n        length,\n        filter(propEq('password', password)),\n        filter(propEq('username', username))\n    )(this.valid_users)\n\n    render() {\n        // let router = redibase.get(\"router\")\n        // if (router === \"true\") {\n        //     return <Router>\n        //         <Route exact path=\"/\" component={App} />\n        //         <Route path=\"/users\" component={Users} />\n        //         <Route path=\"/contact\" component={Contact} />\n        //     </Router>\n        //     redibase.delete(\"router\")\n        // }\n        return (\n\n            <center>\n                <section className=\"overlay\">\n                    <form>\n                        <h1 id=\"first\">Sign In</h1>\n                        <label>\n                            <input type=\"text\" required onChange={(e) => { this.setState({ username: e.target.value }) }} />\n                            <div class=\"label-text\">Username</div>\n                        </label>\n                        <label>\n                            <input type=\"text\" required type=\"password\" onChange={(e) => { this.setState({ password: e.target.value }) }} />\n                            <div class=\"label-text\">Password</div>\n                        </label>\n                        <button onClick={() => this.login(this.state.username, this.state.password)}>Submit</button>\n                        {/* <a href=\"#\" class=\"animated-button1\" onClick={go}>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              Submit\n                </a> */}\n                    </form>\n                    {/* <h2>If you want to sign up you cant. haha.</h2> */}\n\n                    {/* <form action=\"submission.html\" method=\"GET\">\n            <label for=\"usernames\" id=\"username\">Username:</label>\n            <br />\n            <input id=\"usernames\" name=\"username\" type=\"text\" minlength=\"3\" maxlength=\"15\" />\n            <br />\n            <label for=\"usernames\" id=\"username\">Password:</label>\n            <br />\n            <input id=\"usernames\" name=\"pw\" type=\"password\" required minlength=\"8\" maxlength=\"30\" />\n            <br /> <br />\n\n            <a href=\"#\" class=\"animated-button1\" onClick={go}>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              Enter the secret world of padah\n                </a>\n          </form> */}\n\n                </section>\n            </center>\n        )\n    }\n}\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}