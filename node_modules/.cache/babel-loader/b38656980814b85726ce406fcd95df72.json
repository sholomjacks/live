{"ast":null,"code":"/*\n * Copyright 2001-2010 Georges Menie (www.menie.org)\n * Copyright 2010 Salvatore Sanfilippo (adapted to Redis coding style)\n * Copyright 2015 Zihua Li (http://zihua.li) (ported to JavaScript)\n * Copyright 2016 Mike Diarmid (http://github.com/salakar) (re-write for performance, ~700% perf inc)\n * All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of the University of California, Berkeley nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* CRC16 implementation according to CCITT standards.\n *\n * Note by @antirez: this is actually the XMODEM CRC 16 algorithm, using the\n * following parameters:\n *\n * Name                       : \"XMODEM\", also known as \"ZMODEM\", \"CRC-16/ACORN\"\n * Width                      : 16 bit\n * Poly                       : 1021 (That is actually x^16 + x^12 + x^5 + 1)\n * Initialization             : 0000\n * Reflect Input byte         : False\n * Reflect Output CRC         : False\n * Xor constant to output CRC : 0000\n * Output for \"123456789\"     : 31C3\n */\nvar lookup = [0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7, 0x8108, 0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6, 0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401, 0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d, 0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d, 0xc7bc, 0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823, 0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b, 0x5af5, 0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a, 0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd, 0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70, 0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e, 0xe16f, 0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067, 0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e, 0x02b1, 0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d, 0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8, 0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634, 0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882, 0x28a3, 0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a, 0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92, 0xfd2e, 0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1, 0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0];\n/**\n * Convert a string to a UTF8 array - faster than via buffer\n * @param str\n * @returns {Array}\n */\n\nvar toUTF8Array = function toUTF8Array(str) {\n  var char;\n  var i = 0;\n  var p = 0;\n  var utf8 = [];\n  var len = str.length;\n\n  for (; i < len; i++) {\n    char = str.charCodeAt(i);\n\n    if (char < 128) {\n      utf8[p++] = char;\n    } else if (char < 2048) {\n      utf8[p++] = char >> 6 | 192;\n      utf8[p++] = char & 63 | 128;\n    } else if ((char & 0xFC00) === 0xD800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n      char = 0x10000 + ((char & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF);\n      utf8[p++] = char >> 18 | 240;\n      utf8[p++] = char >> 12 & 63 | 128;\n      utf8[p++] = char >> 6 & 63 | 128;\n      utf8[p++] = char & 63 | 128;\n    } else {\n      utf8[p++] = char >> 12 | 224;\n      utf8[p++] = char >> 6 & 63 | 128;\n      utf8[p++] = char & 63 | 128;\n    }\n  }\n\n  return utf8;\n};\n/**\n * Convert a string into a redis slot hash.\n * @param str\n * @returns {number}\n */\n\n\nvar generate = module.exports = function generate(str) {\n  var char;\n  var i = 0;\n  var start = -1;\n  var result = 0;\n  var resultHash = 0;\n  var utf8 = typeof str === 'string' ? toUTF8Array(str) : str;\n  var len = utf8.length;\n\n  while (i < len) {\n    char = utf8[i++];\n\n    if (start === -1) {\n      if (char === 0x7B) {\n        start = i;\n      }\n    } else if (char !== 0x7D) {\n      resultHash = lookup[(char ^ resultHash >> 8) & 0xFF] ^ resultHash << 8;\n    } else if (i - 1 !== start) {\n      return resultHash & 0x3FFF;\n    }\n\n    result = lookup[(char ^ result >> 8) & 0xFF] ^ result << 8;\n  }\n\n  return result & 0x3FFF;\n};\n/**\n * Convert an array of multiple strings into a redis slot hash.\n * Returns -1 if one of the keys is not for the same slot as the others\n * @param keys\n * @returns {number}\n */\n\n\nmodule.exports.generateMulti = function generateMulti(keys) {\n  var i = 1;\n  var len = keys.length;\n  var base = generate(keys[0]);\n\n  while (i < len) {\n    if (generate(keys[i++]) !== base) return -1;\n  }\n\n  return base;\n};","map":{"version":3,"sources":["C:/Users/gamem/codecademy/node_modules/cluster-key-slot/lib/index.js"],"names":["lookup","toUTF8Array","str","char","i","p","utf8","len","length","charCodeAt","generate","module","exports","start","result","resultHash","generateMulti","keys","base"],"mappings":"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","sourcesContent":["/*\n * Copyright 2001-2010 Georges Menie (www.menie.org)\n * Copyright 2010 Salvatore Sanfilippo (adapted to Redis coding style)\n * Copyright 2015 Zihua Li (http://zihua.li) (ported to JavaScript)\n * Copyright 2016 Mike Diarmid (http://github.com/salakar) (re-write for performance, ~700% perf inc)\n * All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of the University of California, Berkeley nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* CRC16 implementation according to CCITT standards.\n *\n * Note by @antirez: this is actually the XMODEM CRC 16 algorithm, using the\n * following parameters:\n *\n * Name                       : \"XMODEM\", also known as \"ZMODEM\", \"CRC-16/ACORN\"\n * Width                      : 16 bit\n * Poly                       : 1021 (That is actually x^16 + x^12 + x^5 + 1)\n * Initialization             : 0000\n * Reflect Input byte         : False\n * Reflect Output CRC         : False\n * Xor constant to output CRC : 0000\n * Output for \"123456789\"     : 31C3\n */\n\nvar lookup = [\n  0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7,\n  0x8108, 0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef,\n  0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6,\n  0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de,\n  0x2462, 0x3443, 0x0420, 0x1401, 0x64e6, 0x74c7, 0x44a4, 0x5485,\n  0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d,\n  0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4,\n  0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d, 0xc7bc,\n  0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\n  0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b,\n  0x5af5, 0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12,\n  0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a,\n  0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41,\n  0xedae, 0xfd8f, 0xcdec, 0xddcd, 0xad2a, 0xbd0b, 0x8d68, 0x9d49,\n  0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70,\n  0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78,\n  0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e, 0xe16f,\n  0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\n  0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e,\n  0x02b1, 0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256,\n  0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d,\n  0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405,\n  0xa7db, 0xb7fa, 0x8799, 0x97b8, 0xe75f, 0xf77e, 0xc71d, 0xd73c,\n  0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634,\n  0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab,\n  0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882, 0x28a3,\n  0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\n  0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92,\n  0xfd2e, 0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9,\n  0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1,\n  0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8,\n  0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0\n];\n\n/**\n * Convert a string to a UTF8 array - faster than via buffer\n * @param str\n * @returns {Array}\n */\nvar toUTF8Array = function toUTF8Array(str) {\n  var char;\n  var i = 0;\n  var p = 0;\n  var utf8 = [];\n  var len = str.length;\n\n  for (; i < len; i++) {\n    char = str.charCodeAt(i);\n    if (char < 128) {\n      utf8[p++] = char;\n    } else if (char < 2048) {\n      utf8[p++] = (char >> 6) | 192;\n      utf8[p++] = (char & 63) | 128;\n    } else if (\n        ((char & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n        ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      char = 0x10000 + ((char & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF);\n      utf8[p++] = (char >> 18) | 240;\n      utf8[p++] = ((char >> 12) & 63) | 128;\n      utf8[p++] = ((char >> 6) & 63) | 128;\n      utf8[p++] = (char & 63) | 128;\n    } else {\n      utf8[p++] = (char >> 12) | 224;\n      utf8[p++] = ((char >> 6) & 63) | 128;\n      utf8[p++] = (char & 63) | 128;\n    }\n  }\n\n  return utf8;\n};\n\n/**\n * Convert a string into a redis slot hash.\n * @param str\n * @returns {number}\n */\nvar generate = module.exports = function generate(str) {\n  var char;\n  var i = 0;\n  var start = -1;\n  var result = 0;\n  var resultHash = 0;\n  var utf8 = typeof str === 'string' ? toUTF8Array(str) : str;\n  var len = utf8.length;\n\n  while (i < len) {\n    char = utf8[i++];\n    if (start === -1) {\n      if (char === 0x7B) {\n        start = i;\n      }\n    } else if (char !== 0x7D) {\n      resultHash = lookup[(char ^ (resultHash >> 8)) & 0xFF] ^ (resultHash << 8);\n    } else if (i - 1 !== start) {\n      return resultHash & 0x3FFF;\n    }\n\n    result = lookup[(char ^ (result >> 8)) & 0xFF] ^ (result << 8);\n  }\n\n  return result & 0x3FFF;\n};\n\n/**\n * Convert an array of multiple strings into a redis slot hash.\n * Returns -1 if one of the keys is not for the same slot as the others\n * @param keys\n * @returns {number}\n */\nmodule.exports.generateMulti = function generateMulti(keys) {\n  var i = 1;\n  var len = keys.length;\n  var base = generate(keys[0]);\n\n  while (i < len) {\n    if (generate(keys[i++]) !== base) return -1;\n  }\n\n  return base;\n};\n"]},"metadata":{},"sourceType":"script"}