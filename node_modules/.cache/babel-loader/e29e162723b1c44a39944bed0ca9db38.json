{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gamem\\\\codecademy\\\\src\\\\SignIn.js\";\nimport { length, lt, filter, propEq, compose } from 'ramda';\nimport React from 'react';\nimport './form.css';\nimport './style.css';\nimport './submit_button.css';\n\nvar bcrypt = require('bcryptjs');\n\nvar hash;\nexport const valid_users = [{\n  username: 'sholom',\n  password: 'jacks'\n}, {\n  username: 'mastermind',\n  password: 'emmer'\n}, {\n  username: 'mendel',\n  password: 'jacks'\n}];\nexport class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      router: false,\n      view: 'password',\n      cmd: '',\n      go: false,\n      track: false,\n      usernamet: ''\n    };\n\n    this.show = () => {\n      if (this.state.view === 'password') {\n        this.setState({\n          view: 'text'\n        });\n      } else {\n        this.setState({\n          view: 'password'\n        });\n      }\n    };\n\n    this.login = (username, password) => {\n      if (length(username) === 0 || length(password) === 0) return;\n\n      if (this.is_valid(username, password)) {\n        this.setState({\n          router: true\n        });\n        hash = bcrypt.hashSync(\"bcrypt-connection-secured\");\n        localStorage.setItem(\"hash\", hash);\n        window.location = '/intro';\n      } else {\n        alert(\"The login is incorrect.\");\n      }\n    };\n\n    this.is_valid = (username, password) => compose(lt(0), length, filter(propEq('password', password)), filter(propEq('username', username)))(valid_users);\n\n    this.runcmd = e => {\n      if (e === 'Track') {\n        this.setState({\n          track: true\n        });\n      }\n    };\n\n    this.gousername = e => {\n      let hasht = localStorage.getItem(\"hash\");\n      let decide = bcrypt.compareSync(\"bcrypt-connection-secured\", hasht);\n\n      if (decide === true) {\n        window.location = '/admin/usernames';\n      } else {// do nothing\n      }\n    };\n  }\n\n  componentDidMount() {\n    let hasht = localStorage.getItem(\"hash\") || '';\n    let decide = bcrypt.compareSync(\"bcrypt-connection-secured\", hasht);\n\n    if (decide === true) {\n      window.location = '/intro';\n    } else {// do nothing\n    }\n  }\n\n  render() {\n    if (window.location === '/') {\n      // Sign in page\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"first\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: e => {\n          this.setState({\n            username: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Username\")), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: this.state.view,\n        required: true,\n        onChange: e => {\n          this.setState({\n            password: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Password\")), React.createElement(\"img\", {\n        id: \"fontlc\",\n        src: \"https://cdn2.iconfinder.com/data/icons/flaticons-solid/18/eye-1-512.png\",\n        alt: \"Show Password\",\n        width: \"50\",\n        onClick: this.show,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.login(this.state.username, this.state.password),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Submit\"))));\n    } else if (window.location === '/admin') {\n      // admin commands page\n      if (this.state.track === true) {\n        return React.createElement(React.Fragment, null, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          value: this.state.usernamet,\n          onChange: e => this.setState({\n            usernamet: e.target.value\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          class: \"label-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Username of the person you want to track\")), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: () => this.gousername(this.state.usernamet),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Usernames\"));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Admin Commands\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.cmd,\n        onChange: e => {\n          this.setState({\n            cmd: e.target.value\n          });\n          this.state.cmd.toUpperCase();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Command\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: () => this.runcmd(this.state.cmd),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Run\"), React.createElement(\"button\", {\n        onClick: go,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Commands\"));\n    }\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/gamem/codecademy/src/SignIn.js"],"names":["length","lt","filter","propEq","compose","React","bcrypt","require","hash","valid_users","username","password","App","Component","state","router","view","cmd","go","track","usernamet","show","setState","login","is_valid","hashSync","localStorage","setItem","window","location","alert","runcmd","e","gousername","hasht","getItem","decide","compareSync","componentDidMount","render","target","value","toUpperCase"],"mappings":"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","sourcesContent":["import { length, lt, filter, propEq, compose } from 'ramda'\nimport React from 'react'\nimport './form.css'\nimport './style.css'\nimport './submit_button.css'\nvar bcrypt = require('bcryptjs');\nvar hash\n\nexport const valid_users = [\n    {\n        username: 'sholom',\n        password: 'jacks'\n    },\n    {\n        username: 'mastermind',\n        password: 'emmer'\n    }, {\n        username: 'mendel',\n        password: 'jacks'\n    }\n]\n\nexport class App extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        router: false,\n        view: 'password',\n        cmd: '',\n        go: false,\n        track: false,\n        usernamet: ''\n    }\n\n\n    componentDidMount() {\n        let hasht = localStorage.getItem(\"hash\") || ''\n        let decide = bcrypt.compareSync(\"bcrypt-connection-secured\", hasht)\n        if (decide === true) {\n            window.location = '/intro'\n        } else {\n            // do nothing\n        }\n    }\n\n    show = () => {\n        if (this.state.view === 'password') {\n            this.setState({ view: 'text' })\n        } else {\n            this.setState({ view: 'password' })\n        }\n    }\n\n    login = (username, password) => {\n        if (length(username) === 0 || length(password) === 0) return\n        if (this.is_valid(username, password)) {\n            this.setState({ router: true })\n            hash = bcrypt.hashSync(\"bcrypt-connection-secured\");\n            localStorage.setItem(\"hash\", hash)\n            window.location = '/intro'\n        } else {\n            alert(\"The login is incorrect.\")\n        }\n    }\n\n    is_valid = (username, password) => compose(\n        lt(0),\n        length,\n        filter(propEq('password', password)),\n        filter(propEq('username', username))\n    )(valid_users)\n\n    runcmd = (e) => {\n        if (e === 'Track') {\n            this.setState({ track: true })\n        }\n    }\n\n    gousername = (e) => {\n        let hasht = localStorage.getItem(\"hash\")\n        let decide = bcrypt.compareSync(\"bcrypt-connection-secured\", hasht)\n        if (decide === true) {\n            window.location = '/admin/usernames'\n        } else {\n            // do nothing\n        }\n    }\n\n    render() {\n        if (window.location === '/') {\n            // Sign in page\n            return (\n                <div>\n\n                    <center>\n                        <section className=\"overlay\">\n                            <h1 id=\"first\">Sign In</h1>\n                            <label>\n                                <input type=\"text\" required onChange={(e) => { this.setState({ username: e.target.value }) }} />\n                                <div class=\"label-text\">Username</div>\n                            </label>\n                            <label>\n                                <input type={this.state.view} required onChange={(e) => { this.setState({ password: e.target.value }) }} />\n                                <div class=\"label-text\">Password</div>\n                            </label>\n                            <img id=\"fontlc\" src=\"https://cdn2.iconfinder.com/data/icons/flaticons-solid/18/eye-1-512.png\" alt=\"Show Password\" width=\"50\" onClick={this.show} />\n                            <br />\n                            <button onClick={() => this.login(this.state.username, this.state.password)}>Submit</button>\n                            {/* <a href=\"#\" class=\"animated-button1\" onClick={go}>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              Submit\n                </a> */}\n                        </section>\n                    </center>\n                </div>\n            )\n        } else if (window.location === '/admin') {\n            // admin commands page\n\n\n            if (this.state.track === true) {\n                return (\n                    <>\n                        <label>\n                            <input type=\"text\" required value={this.state.usernamet} onChange={(e) => this.setState({ usernamet: e.target.value })} />\n                            <div class=\"label-text\">Username of the person you want to track</div>\n                        </label>\n                        <br />\n                        <br />\n                        <button onClick={() => this.gousername(this.state.usernamet)}>Usernames</button>\n                    </>\n                )\n            }\n            return (\n                <div>\n                    <title>Admin Commands</title>\n                    <label>\n                        <input type=\"text\" required value={this.state.cmd} onChange={(e) => { this.setState({ cmd: e.target.value }); this.state.cmd.toUpperCase() }} />\n                        <div class=\"label-text\">Command</div>\n                    </label>\n\n                    <br />\n                    <br />\n                    <button type=\"submit\" onClick={() => this.runcmd(this.state.cmd)} >Run</button>\n                    <button onClick={go}>Commands</button>\n                </div>\n            )\n        }\n\n    }\n}\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}