{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gamem\\\\codecademy\\\\src\\\\SignIn.js\";\nimport { length } from 'ramda';\nimport React from 'react';\nimport './form.css';\nimport './style.css';\nimport './submit_button.css';\n\nvar bcrypt = require('bcryptjs');\n\nvar hash;\nvar usernameg = null;\nexport const usernames = ['sholom', 'mastermind'];\nexport const passwords = ['jacks', 'emmer'];\nexport class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      router: false,\n      view: 'password'\n    };\n\n    this.show = () => {\n      if (this.state.view === 'password') {\n        this.setState({\n          view: 'text'\n        });\n      } else {\n        this.setState({\n          view: 'password'\n        });\n      }\n    };\n\n    this.login = async (username, password) => {\n      if (length(username) === 0 || length(password) === 0) return;\n      alert(\"login function starting...\");\n\n      for (let i = 0; i < usernames.length; i++) {\n        const e = username[i];\n        let dp = usernames.length - 1;\n\n        if (i !== dp && username === e) {\n          usernameg = true;\n          alert(\"d username\");\n        } else {\n          // do nothing\n          alert(\"username errer\");\n        }\n\n        if (i === dp) {\n          if (username === e) {\n            usernameg = true;\n            alert(\"good username\");\n          } else if (i === dp) {\n            usernameg = false;\n            alert(\"bad username\");\n          }\n        }\n      }\n\n      for (let i = 0; i < passwords.length; i++) {\n        const e = passwords[i];\n        let dp = passwords.length - 1;\n\n        if (i !== dp && password === e && usernameg === true) {\n          hash = bcrypt.hashSync(\"bcrypt-connection-secured\");\n          localStorage.setItem(\"hash\", hash);\n          window.location = '/intro';\n        } else {\n          // do nothing\n          alert(\"password errer\");\n        }\n\n        if (i === dp) {\n          if (password === e && usernameg === true) {\n            hash = bcrypt.hashSync(\"bcrypt-connection-secured\");\n            localStorage.setItem(\"hash\", hash);\n            window.location = '/intro';\n          } else if (i === dp) {\n            alert(\"The login is incorrect please try again\");\n            this.setState({\n              username: ''\n            });\n            this.setState({\n              password: ''\n            });\n          }\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    let hasht = localStorage.getItem(\"hash\") || '';\n    let decide = bcrypt.compareSync(\"bcrypt-connection-secured\", hasht);\n\n    if (decide === true) {\n      window.location = '/intro';\n    } else {// do nothing\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      onChange: e => {\n        this.setState({\n          username: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Username\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: this.state.view,\n      required: true,\n      onChange: e => {\n        this.setState({\n          password: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"label-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Password\")), React.createElement(\"img\", {\n      id: \"fontlc\",\n      src: \"https://cdn2.iconfinder.com/data/icons/flaticons-solid/18/eye-1-512.png\",\n      alt: \"Show Password\",\n      width: \"50\",\n      onClick: this.show,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.login(this.state.username, this.state.password),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["C:/Users/gamem/codecademy/src/SignIn.js"],"names":["length","React","bcrypt","require","hash","usernameg","usernames","passwords","App","Component","state","username","password","router","view","show","setState","login","alert","i","e","dp","hashSync","localStorage","setItem","window","location","componentDidMount","hasht","getItem","decide","compareSync","render","target","value"],"mappings":"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","sourcesContent":["import { length } from 'ramda'\nimport React from 'react'\nimport './form.css'\nimport './style.css'\nimport './submit_button.css'\nvar bcrypt = require('bcryptjs');\nvar hash\nvar usernameg = null\n\n\nexport const usernames = ['sholom', 'mastermind']\n\nexport const passwords = ['jacks', 'emmer']\n\nexport class App extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        router: false,\n        view: 'password'\n    }\n\n\n    componentDidMount() {\n        let hasht = localStorage.getItem(\"hash\") || ''\n        let decide = bcrypt.compareSync(\"bcrypt-connection-secured\", hasht)\n        if (decide === true) {\n            window.location = '/intro'\n        } else {\n            // do nothing\n        }\n    }\n\n    show = () => {\n        if (this.state.view === 'password') {\n            this.setState({ view: 'text' })\n        } else {\n            this.setState({ view: 'password' })\n        }\n    }\n\n    login = async (username, password) => {\n        if (length(username) === 0 || length(password) === 0) return\n        alert(\"login function starting...\")\n        for (let i = 0; i < usernames.length; i++) {\n            const e = username[i]\n\n            let dp = usernames.length - 1\n\n            if (i !== dp && username === e) {\n                usernameg = true\n                alert(\"d username\")\n            } else {\n                // do nothing\n                alert(\"username errer\")\n            }\n            \n            if (i === dp) {\n                if (username === e) {\n                    usernameg = true\n                    alert(\"good username\")\n                } else if(i === dp) {\n                    usernameg = false\n                    alert(\"bad username\")\n                }\n            }\n        }\n\n        for (let i = 0; i < passwords.length; i++) {\n            const e = passwords[i]\n\n            let dp = passwords.length - 1\n\n            if (i !== dp && password === e && usernameg === true) {\n                hash = bcrypt.hashSync(\"bcrypt-connection-secured\");\n                localStorage.setItem(\"hash\", hash)\n                window.location = '/intro'\n            } else {\n                // do nothing\n                alert(\"password errer\")\n            }\n\n            if (i === dp) {\n                if (password === e && usernameg === true) {\n                    hash = bcrypt.hashSync(\"bcrypt-connection-secured\");\n                    localStorage.setItem(\"hash\", hash)\n                    window.location = '/intro'\n                } else if(i === dp) {\n                    alert(\"The login is incorrect please try again\")\n                    this.setState({ username: '' })\n                    this.setState({ password: '' })\n                }\n            }\n\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n\n                <center>\n                    <section className=\"overlay\">\n                        <h1 id=\"first\">Sign In</h1>\n                        <label>\n                            <input type=\"text\" required onChange={(e) => { this.setState({ username: e.target.value }) }} />\n                            <div class=\"label-text\">Username</div>\n                        </label>\n                        <label>\n                            <input type={this.state.view} required onChange={(e) => { this.setState({ password: e.target.value }) }} />\n                            <div class=\"label-text\">Password</div>\n                        </label>\n                        <img id=\"fontlc\" src=\"https://cdn2.iconfinder.com/data/icons/flaticons-solid/18/eye-1-512.png\" alt=\"Show Password\" width=\"50\" onClick={this.show} />\n                        <br />\n                        <button onClick={() => this.login(this.state.username, this.state.password)}>Submit</button>\n                        {/* <a href=\"#\" class=\"animated-button1\" onClick={go}>\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              Submit\n                </a> */}\n                    </section>\n                </center>\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}