{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst lodash_1 = require(\"./utils/lodash\");\n\nconst command_1 = require(\"./command\");\n\nconst script_1 = require(\"./script\");\n\nconst PromiseContainer = require(\"./promiseContainer\");\n\nconst standard_as_callback_1 = require(\"standard-as-callback\");\n\nvar DROP_BUFFER_SUPPORT_ERROR = \"*Buffer methods are not available \" + 'because \"dropBufferSupport\" option is enabled.' + \"Refer to https://github.com/luin/ioredis/wiki/Improve-Performance for more details.\";\n/**\n * Commander\n *\n * This is the base class of Redis, Redis.Cluster and Pipeline\n *\n * @param {boolean} [options.showFriendlyErrorStack=false] - Whether to show a friendly error stack.\n * Will decrease the performance significantly.\n * @constructor\n */\n\nfunction Commander() {\n  this.options = lodash_1.defaults({}, this.options || {}, {\n    showFriendlyErrorStack: false\n  });\n  this.scriptsSet = {};\n}\n\nexports.default = Commander;\n\nvar commands = require(\"redis-commands\").list.filter(function (command) {\n  return command !== \"monitor\";\n});\n\ncommands.push(\"sentinel\");\n/**\n * Return supported builtin commands\n *\n * @return {string[]} command list\n * @public\n */\n\nCommander.prototype.getBuiltinCommands = function () {\n  return commands.slice(0);\n};\n/**\n * Create a builtin command\n *\n * @param {string} commandName - command name\n * @return {object} functions\n * @public\n */\n\n\nCommander.prototype.createBuiltinCommand = function (commandName) {\n  return {\n    string: generateFunction(commandName, \"utf8\"),\n    buffer: generateFunction(commandName, null)\n  };\n};\n\ncommands.forEach(function (commandName) {\n  Commander.prototype[commandName] = generateFunction(commandName, \"utf8\");\n  Commander.prototype[commandName + \"Buffer\"] = generateFunction(commandName, null);\n});\nCommander.prototype.call = generateFunction(\"utf8\");\nCommander.prototype.callBuffer = generateFunction(null); // eslint-disable-next-line @typescript-eslint/camelcase\n\nCommander.prototype.send_command = Commander.prototype.call;\n/**\n * Define a custom command using lua script\n *\n * @param {string} name - the command name\n * @param {object} definition\n * @param {string} definition.lua - the lua code\n * @param {number} [definition.numberOfKeys=null] - the number of keys.\n * @param {boolean} [definition.readOnly=false] - force this script to be readonly so it executes on slaves as well.\n * If omit, you have to pass the number of keys as the first argument every time you invoke the command\n */\n\nCommander.prototype.defineCommand = function (name, definition) {\n  var script = new script_1.default(definition.lua, definition.numberOfKeys, this.options.keyPrefix, definition.readOnly);\n  this.scriptsSet[name] = script;\n  this[name] = generateScriptingFunction(script, \"utf8\");\n  this[name + \"Buffer\"] = generateScriptingFunction(script, null);\n};\n/**\n * Send a command\n *\n * @abstract\n * @public\n */\n\n\nCommander.prototype.sendCommand = function () {};\n\nfunction generateFunction(_commandName, _encoding) {\n  if (typeof _encoding === \"undefined\") {\n    _encoding = _commandName;\n    _commandName = null;\n  }\n\n  return function () {\n    var firstArgIndex = 0;\n    var commandName = _commandName;\n\n    if (commandName === null) {\n      commandName = arguments[0];\n      firstArgIndex = 1;\n    }\n\n    var length = arguments.length;\n    var lastArgIndex = length - 1;\n    var callback = arguments[lastArgIndex];\n\n    if (typeof callback !== \"function\") {\n      callback = undefined;\n    } else {\n      length = lastArgIndex;\n    }\n\n    var args = new Array(length - firstArgIndex);\n\n    for (var i = firstArgIndex; i < length; ++i) {\n      args[i - firstArgIndex] = arguments[i];\n    }\n\n    var options;\n\n    if (this.options.dropBufferSupport) {\n      if (!_encoding) {\n        return standard_as_callback_1.default(PromiseContainer.get().reject(new Error(DROP_BUFFER_SUPPORT_ERROR)), callback);\n      }\n\n      options = {\n        replyEncoding: null\n      };\n    } else {\n      options = {\n        replyEncoding: _encoding\n      };\n    }\n\n    if (this.options.showFriendlyErrorStack) {\n      options.errorStack = new Error().stack;\n    }\n\n    if (this.options.keyPrefix) {\n      options.keyPrefix = this.options.keyPrefix;\n    }\n\n    return this.sendCommand(new command_1.default(commandName, args, options, callback));\n  };\n}\n\nfunction generateScriptingFunction(_script, _encoding) {\n  return function () {\n    var length = arguments.length;\n    var lastArgIndex = length - 1;\n    var callback = arguments[lastArgIndex];\n\n    if (typeof callback !== \"function\") {\n      callback = undefined;\n    } else {\n      length = lastArgIndex;\n    }\n\n    var args = new Array(length);\n\n    for (var i = 0; i < length; i++) {\n      args[i] = arguments[i];\n    }\n\n    var options;\n\n    if (this.options.dropBufferSupport) {\n      if (!_encoding) {\n        return standard_as_callback_1.default(PromiseContainer.get().reject(new Error(DROP_BUFFER_SUPPORT_ERROR)), callback);\n      }\n\n      options = {\n        replyEncoding: null\n      };\n    } else {\n      options = {\n        replyEncoding: _encoding\n      };\n    }\n\n    if (this.options.showFriendlyErrorStack) {\n      options.errorStack = new Error().stack;\n    }\n\n    return _script.execute(this, args, options, callback);\n  };\n}","map":{"version":3,"sources":["C:/Users/gamem/codecademy/node_modules/ioredis/built/commander.js"],"names":["Object","defineProperty","exports","value","lodash_1","require","command_1","script_1","PromiseContainer","standard_as_callback_1","DROP_BUFFER_SUPPORT_ERROR","Commander","options","defaults","showFriendlyErrorStack","scriptsSet","default","commands","list","filter","command","push","prototype","getBuiltinCommands","slice","createBuiltinCommand","commandName","string","generateFunction","buffer","forEach","call","callBuffer","send_command","defineCommand","name","definition","script","lua","numberOfKeys","keyPrefix","readOnly","generateScriptingFunction","sendCommand","_commandName","_encoding","firstArgIndex","arguments","length","lastArgIndex","callback","undefined","args","Array","i","dropBufferSupport","get","reject","Error","replyEncoding","errorStack","stack","_script","execute"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lodash_1 = require(\"./utils/lodash\");\nconst command_1 = require(\"./command\");\nconst script_1 = require(\"./script\");\nconst PromiseContainer = require(\"./promiseContainer\");\nconst standard_as_callback_1 = require(\"standard-as-callback\");\nvar DROP_BUFFER_SUPPORT_ERROR = \"*Buffer methods are not available \" +\n    'because \"dropBufferSupport\" option is enabled.' +\n    \"Refer to https://github.com/luin/ioredis/wiki/Improve-Performance for more details.\";\n/**\n * Commander\n *\n * This is the base class of Redis, Redis.Cluster and Pipeline\n *\n * @param {boolean} [options.showFriendlyErrorStack=false] - Whether to show a friendly error stack.\n * Will decrease the performance significantly.\n * @constructor\n */\nfunction Commander() {\n    this.options = lodash_1.defaults({}, this.options || {}, {\n        showFriendlyErrorStack: false\n    });\n    this.scriptsSet = {};\n}\nexports.default = Commander;\nvar commands = require(\"redis-commands\").list.filter(function (command) {\n    return command !== \"monitor\";\n});\ncommands.push(\"sentinel\");\n/**\n * Return supported builtin commands\n *\n * @return {string[]} command list\n * @public\n */\nCommander.prototype.getBuiltinCommands = function () {\n    return commands.slice(0);\n};\n/**\n * Create a builtin command\n *\n * @param {string} commandName - command name\n * @return {object} functions\n * @public\n */\nCommander.prototype.createBuiltinCommand = function (commandName) {\n    return {\n        string: generateFunction(commandName, \"utf8\"),\n        buffer: generateFunction(commandName, null)\n    };\n};\ncommands.forEach(function (commandName) {\n    Commander.prototype[commandName] = generateFunction(commandName, \"utf8\");\n    Commander.prototype[commandName + \"Buffer\"] = generateFunction(commandName, null);\n});\nCommander.prototype.call = generateFunction(\"utf8\");\nCommander.prototype.callBuffer = generateFunction(null);\n// eslint-disable-next-line @typescript-eslint/camelcase\nCommander.prototype.send_command = Commander.prototype.call;\n/**\n * Define a custom command using lua script\n *\n * @param {string} name - the command name\n * @param {object} definition\n * @param {string} definition.lua - the lua code\n * @param {number} [definition.numberOfKeys=null] - the number of keys.\n * @param {boolean} [definition.readOnly=false] - force this script to be readonly so it executes on slaves as well.\n * If omit, you have to pass the number of keys as the first argument every time you invoke the command\n */\nCommander.prototype.defineCommand = function (name, definition) {\n    var script = new script_1.default(definition.lua, definition.numberOfKeys, this.options.keyPrefix, definition.readOnly);\n    this.scriptsSet[name] = script;\n    this[name] = generateScriptingFunction(script, \"utf8\");\n    this[name + \"Buffer\"] = generateScriptingFunction(script, null);\n};\n/**\n * Send a command\n *\n * @abstract\n * @public\n */\nCommander.prototype.sendCommand = function () { };\nfunction generateFunction(_commandName, _encoding) {\n    if (typeof _encoding === \"undefined\") {\n        _encoding = _commandName;\n        _commandName = null;\n    }\n    return function () {\n        var firstArgIndex = 0;\n        var commandName = _commandName;\n        if (commandName === null) {\n            commandName = arguments[0];\n            firstArgIndex = 1;\n        }\n        var length = arguments.length;\n        var lastArgIndex = length - 1;\n        var callback = arguments[lastArgIndex];\n        if (typeof callback !== \"function\") {\n            callback = undefined;\n        }\n        else {\n            length = lastArgIndex;\n        }\n        var args = new Array(length - firstArgIndex);\n        for (var i = firstArgIndex; i < length; ++i) {\n            args[i - firstArgIndex] = arguments[i];\n        }\n        var options;\n        if (this.options.dropBufferSupport) {\n            if (!_encoding) {\n                return standard_as_callback_1.default(PromiseContainer.get().reject(new Error(DROP_BUFFER_SUPPORT_ERROR)), callback);\n            }\n            options = { replyEncoding: null };\n        }\n        else {\n            options = { replyEncoding: _encoding };\n        }\n        if (this.options.showFriendlyErrorStack) {\n            options.errorStack = new Error().stack;\n        }\n        if (this.options.keyPrefix) {\n            options.keyPrefix = this.options.keyPrefix;\n        }\n        return this.sendCommand(new command_1.default(commandName, args, options, callback));\n    };\n}\nfunction generateScriptingFunction(_script, _encoding) {\n    return function () {\n        var length = arguments.length;\n        var lastArgIndex = length - 1;\n        var callback = arguments[lastArgIndex];\n        if (typeof callback !== \"function\") {\n            callback = undefined;\n        }\n        else {\n            length = lastArgIndex;\n        }\n        var args = new Array(length);\n        for (var i = 0; i < length; i++) {\n            args[i] = arguments[i];\n        }\n        var options;\n        if (this.options.dropBufferSupport) {\n            if (!_encoding) {\n                return standard_as_callback_1.default(PromiseContainer.get().reject(new Error(DROP_BUFFER_SUPPORT_ERROR)), callback);\n            }\n            options = { replyEncoding: null };\n        }\n        else {\n            options = { replyEncoding: _encoding };\n        }\n        if (this.options.showFriendlyErrorStack) {\n            options.errorStack = new Error().stack;\n        }\n        return _script.execute(this, args, options, callback);\n    };\n}\n"]},"metadata":{},"sourceType":"script"}